# Pre-Commit E2E Tests in Android
name: Pre-Commit E2E Tests in Android
# Controls when the action will run.
on: [pull_request]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: macOS-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Setup Node JS - 10.17.0
      - name: Set up Node JS 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      # Clean Packages & Install Dependencies
      - name: Clean Packages
        run: |
          rm -rf node_modules
          npm cache clean --force
          rm -rf package-lock.json
      - name: Use specific Java version for sdkmanager to work
        uses: joschi/setup-jdk@v1
        with:
          java-version: "openjdk8"
          architecture: "x64"
      - name: Download Android Emulator Image
        run: |
          echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --install "system-images;android-29;google_apis;x86"
          echo "no" | $ANDROID_HOME/tools/bin/avdmanager create avd --force --name emu --device "Nexus 5X" -k 'system-images;android-29;google_apis;x86'
          $ANDROID_HOME/emulator/emulator -list-avds
      # Install
      - name: Install
        run: npm install
      # Run Android Emulator
      - name: Android Emulator
        timeout-minutes: 10
        continue-on-error: true
        run: |
          echo "Starting emulator"
          nohup $ANDROID_HOME/emulator/emulator -avd emu -no-audio -no-snapshot -no-window &
          $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do sleep 1; done; input keyevent 82'
          $ANDROID_HOME/platform-tools/adb devices
          echo "Emulator started"
      # # Use HTTPS repos
      # - name: Use HTTPS repos
      #   run: |
      #     git config --global url."https://github".insteadOf ssh://git@github
      # # Install Repo and Dependencies
      # - name: Install Repo and Dependencies
      #   run: |
      #     npm install --save-dev
      # # Start the Appium Server
      # - name: Start the Appium Server
      #   run: ./node_modules/.bin/appium --log-timestamp --log-no-colors --allow-insecure chromedriver_autodownload > appium.log &
      # # Poll for Appium Server to Start
      # - name: Poll for Appium Server to Start
      #   run: |
      #     until $(curl --output /dev/null --silent --head --fail http://127.0.0.1:4723/wd/hub/sessions); do
      #       sleep 5
      #     done
      # # Open Metro Bundler in Background
      # - name: Open Metro Bundler in Background
      #   run: |
      #     node_modules/react-native/scripts/launchPackager.command &
      # # Build Android App and Run Tests
      # - name: Build Android App and Run Tests
      #   env:
      #     E2E_TEST_PLATFORM: "android"
      #     E2E_TEST_DEFAULTS: "true"
      #     E2E_TEST_TAGS: "E2E"
      #   run: |
      #     react-native run-android
      #     sleep 15
      #     npm run e2e-test
      # # Upload Appium Logs
      # - name: Upload Appium logs
      #   uses: actions/upload-artifact@v1
      #   with:
      #     name: appium.log
      #     path: appium.log
      # # Upload Test Results
      # - name: Upload Test Results
      #   uses: actions/upload-artifact@v1
      #   with:
      #     name: e2e-results
      #     path: __tests__/e2e/output
