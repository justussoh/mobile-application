# Pre-Commit E2E Tests in Android
name: Pre-Commit E2E Tests in Android
# Controls when the action will run.
on: [pull_request]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: macOS-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Setup Node JS - 10.17.0
      - name: Set up Node JS 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      # setup Python
      - uses: actions/setup-python@v2
        with:
          python-version: "3.x"
      # Clean Packages & Install Dependencies
      - name: Clean Packages
        run: |
          rm -rf node_modules
          npm cache clean --force
          rm -rf package-lock.json
      # Install Simulator
      - name: Use specific Java version for sdkmanager to work
        uses: joschi/setup-jdk@v1
        with:
          java-version: "openjdk8"
          architecture: "x64"
      - name: Download Android Emulator Image
        run: |
          echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --install "system-images;android-29;google_apis;x86"
          echo "no" | $ANDROID_HOME/tools/bin/avdmanager create avd --force --name emu --device "Nexus 5X" -k 'system-images;android-29;google_apis;x86'
          $ANDROID_HOME/emulator/emulator -list-avds
      # Run Android Emulator
      - name: Android Emulator
        timeout-minutes: 30
        continue-on-error: true
        run: |
          echo "Starting emulator"
          nohup $ANDROID_HOME/emulator/emulator -avd emu -no-audio -no-snapshot -no-window &
          $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do sleep 1; done; input keyevent 82'
          $ANDROID_HOME/platform-tools/adb devices
          echo "Emulator started"
       - name: Retrieve Device Name  
        id: deviceName
        run: |
          DEVICE_NAME=$(echo $($ANDROID_HOME/platform-tools/adb devices | egrep -o 'emulator-[0-9]*'))
          echo Emulator UUID is $DEVICE_NAME
          echo "::set-output deviceName=ip::$DEVICE_NAME"
       - name: Retrieve Emulator Version
        id: platformVersion
        run: |
          PLATFORM_VERSION=$(echo $($ANDROID_HOME/platform-tools/adb shell getprop ro.build.version.release))
          echo Emulator platform version is $PLATFORM_VERSION
          echo "::set-output platformVersion=ip::$PLATFORM_VERSION"
      # Install Application
      - name: Install
        run: npm install
      - uses: expo/expo-github-action@v5
        with:
          expo-packager: npm
          expo-username: ${{ secrets.EXPO_CLI_TEST_USERNAME }}
          expo-password: ${{ secrets.EXPO_CLI_TEST_PASSWORD }}
          expo-cache: true
      - name: Expo Publish Channel
        run: APP_BUILD_VERSION=1.0.0 APP_BINARY_VERSION=1 expo publish --non-interactive --release-channel e2e
      # open uri
      - name: open deep link
        run: |
          echo "Emulator starting to install apk"
          $ANDROID_HOME/platform-tools/adb -s emulator-5554 install ./e2e/Exponent-2.16.1.apk
          $ANDROID_HOME/platform-tools/adb shell am start -W -a android.intent.action.VIEW -d "exp://exp.host/@justussoh/rationally/--/login?release-channel=e2e\&key=c3cfc101-e8c0-4647-9b9b-d05b0573e4b7\&endpoint=https://api.staging.sally-dev.stack.gov.sg"
          echo "Emulator done"
      setup e2e
      - name: install appium
        run: npm install appium -g
      # install robot
      - name: install robot
        run: |
          cd e2e
          pip3 install -r requirements.txt
      # - name: Retrieve IP address
      #   id: ip
      #   run: |
      #     IP=$(echo $(ifconfig | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1' | grep -Eo '10.[0-9]*.[0-9]*.[0-9]*'))
      #     echo The host IP address is $IP
      #     echo "::set-output name=ip::$IP
      # run e2e
      - name: run e2e
        run: |
          cd e2e
          robot --variable DEVICE_NAME:${{steps.deviceName.outputs.deviceName}} --variable PLATFORM_VERSION:${{steps.platformVersion.outputs.platformVersion}} test.txt
      # Upload Appium Log
      - name: Upload Appium logs
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: output
          path: |
            ./e2e/log.html
            ./e2e/report.html
            ./e2e/output.xml
            ./e2e/appium_kill_stdout.txt
            ./e2e/appium-screenshot-1.png
      # # Upload Test Results
      # - name: Upload Test Results
      #   uses: actions/upload-artifact@v1
      #   with:
      #     name: e2e-results
      #     path: __tests__/e2e/output
      # # Use HTTPS repos
      # - name: Use HTTPS repos
      #   run: |
      #     git config --global url."https://github".insteadOf ssh://git@github
      # # Install Repo and Dependencies
      # - name: Install Repo and Dependencies
      #   run: |
      #     npm install --save-dev
      # # Start the Appium Server
      # - name: Start the Appium Server
      #   run: ./node_modules/.bin/appium --log-timestamp --log-no-colors --allow-insecure chromedriver_autodownload > appium.log &
      # # Poll for Appium Server to Start
      # - name: Poll for Appium Server to Start
      #   run: |
      #     until $(curl --output /dev/null --silent --head --fail http://127.0.0.1:4723/wd/hub/sessions); do
      #       sleep 5
      #     done
      # # Open Metro Bundler in Background
      # - name: Open Metro Bundler in Background
      #   run: |
      #     node_modules/react-native/scripts/launchPackager.command &
      # # Build Android App and Run Tests
      # - name: Build Android App and Run Tests
      #   env:
      #     E2E_TEST_PLATFORM: "android"
      #     E2E_TEST_DEFAULTS: "true"
      #     E2E_TEST_TAGS: "E2E"
      #   run: |
      #     react-native run-android
      #     sleep 15
      #     npm run e2e-test
